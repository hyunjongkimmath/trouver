# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../../../nbs/35_markdown.obsidian.personal.machine_learning.definition_and_notation_naming.ipynb.

# %% auto 0
__all__ = ['data_from_information_note']

# %% ../../../../../nbs/35_markdown.obsidian.personal.machine_learning.definition_and_notation_naming.ipynb 4
from ....markdown.file import MarkdownFile
from ..note_processing import process_standard_information_note
from ...vault import VaultNote

# %% ../../../../../nbs/35_markdown.obsidian.personal.machine_learning.definition_and_notation_naming.ipynb 6
def data_from_information_note(
        info_note: VaultNote, # The standard information note from which to draw data.
    ) -> dict:
    """
    Obtain data for naming definitions and notations for a standard information
    note.

    Definitions and notations should be marked by HTML tags (see
    `markdown.obsidian.personal.machine_learning.tokenize`).
    - A definition is to be marked by an HTML tag with a `definition` attribute,
      which is the definition's "name", i.e. words and/or phrases describing what
      the definition is called and to what objects/situations the definition
      is applicable. If multiple combinations of words/phrases are appropriate,
      then they are separated by a single semicolon `;`. If the `definition`
      attribute is `""`, then the definition name has not been marked, both manually
      and automatically.
    - A notation (technically the full LaTeX string in which the notation is
      introducedis) is to be marked by an HTML tag with a `notation` attribute,
      which is the notation's "name", i.e. the actual notation introduced in
      the LaTeX string (without surrounding dollar signs (`$` or `$$`)). If
      multiple notations are appropriate, then they are separated by
      double semicolons `;;`. If the `notation` attribute is `""`, then it
      means that either the notation has not been marked, or that the
      LaTeX string (minus the surrounding dollar signs) is exactly the
      introduced notation. 
    """
    mf = MarkdownFile.from_vault_note(info_note)

    # Processes the info note in all ways except for the HTML tags
    mf = process_standard_information_note(
        mf, info_note.vault,
        True, True, True, True, True, False, True, True, True, True,
        True, True, True, True, True)
