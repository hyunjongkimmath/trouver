"""Helper functions for latex functionalities"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/47_helper.latex.ipynb.

# %% auto 0
__all__ = ['math_mode_string_is_syntactically_valid', 'math_mode_string_is_syntactically_clean', 'reduce_unnecessary_spaces']

# %% ../../nbs/47_helper.latex.ipynb 2
import re

from .regex import latex_indices

# %% ../../nbs/47_helper.latex.ipynb 6
def _is_balanced_braces(s):
    """
    This is a helper function to `math_mode_string_is_syntactically_valid`.

    Note that curly braces (`{`, `}`) that have 
    """
    stack = []
    escaped = False
    
    for _, char in enumerate(s):
        if char == '\\':
            escaped = True
        elif char == '{' and not escaped:
            stack.append(char)
        elif char == '}' and not escaped:
            if not stack:
                return False
            stack.pop()
        else:
            escaped = False
    
    return len(stack) == 0


# %% ../../nbs/47_helper.latex.ipynb 8
def _detect_backslash_space_curly(
        text: str
        ) -> bool:
    """
    Return `True` if there is some backslash `\` followed
    by spaces and then followed by curly brackets `{`

    Note that the presence of such a combination of text
    will induce a syntax error in LaTeX math mode string.

    This is a helper function of `math_mode_string_is_syntactically_valid`
    """
    pattern = r'\\\s+[{}]'
    match = re.search(pattern, text)
    return bool(match)

# %% ../../nbs/47_helper.latex.ipynb 10
def math_mode_string_is_syntactically_valid(
        text: str,
        ) -> bool:
    """
    Return `True` if `text` is determined to be syntactically valid
    as a latex str.

    There may be TeX syntax rules beyond the scope of this function.

    Some caveats:

    `text` is allowed to have dollar signs `$` and is also allowed to not have
    dollar signs. Even if `text` does not have dollar signs, this function
    may return `True`. Even if `text` has dollar signs, this function may return
    `False` if the entire string is not a singular math mode string or if the
    dollar signs are not used in a math-mode-valid way.
    """
    # 
    if len(latex_indices(text)) > 1:
        return False
    if _detect_backslash_space_curly(text):
        return False
    if not _is_balanced_braces(text):
        return False
    return True



# %% ../../nbs/47_helper.latex.ipynb 26
def math_mode_string_is_syntactically_clean(
        text: str,
        ) -> bool:
    """
    Return `True` if `text` is syntactically "clean" as a LaTeX math mode str.
    
    While the precise meaning of this may be subjective, here we will
    consider `text` to be clean, assuming that it is syntactically valid, if

    - It does not have double blackslashes
    """
    if r'\\' in text:
        return False

# %% ../../nbs/47_helper.latex.ipynb 29
def reduce_unnecessary_spaces(
        text: str
        ) -> str:
    """
    Return a string modifying `text` by removing spaces which are
    unnecessary for the purposes of considering the string as a 
    LaTeX string.
    """
    pattern = r'([{_^\\])\s+'
    text = re.sub(pattern, r'\1', text)
    pattern = r'\s+([}_^])'
    text = re.sub(pattern, r'\1', text)
    return text
    # for char in ['{', '_', '^', '}', '\\']:
    #     text = re.sub(fr'\s*{chr}\s*', chr, text)
